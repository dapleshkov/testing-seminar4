<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="8" passed="7" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2020-10-07T11:47:00 MSK" name="AdvSqrtTest" finished-at="2020-10-07T11:47:00 MSK" duration-ms="46">
    <groups>
    </groups>
    <test started-at="2020-10-07T11:47:00 MSK" name="Command line test" finished-at="2020-10-07T11:47:00 MSK" duration-ms="46">
      <class name="AdvSqrtTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:AdvSqrtTest@564fabc8]" started-at="2020-10-07T11:47:00 MSK" name="setUp" finished-at="2020-10-07T11:47:00 MSK" duration-ms="10" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="on0_Return0()[pri:0, instance:AdvSqrtTest@564fabc8]" started-at="2020-10-07T11:47:00 MSK" name="on0_Return0" finished-at="2020-10-07T11:47:00 MSK" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- on0_Return0 -->
        <test-method signature="on10_ReturnSqrt()[pri:0, instance:AdvSqrtTest@564fabc8]" started-at="2020-10-07T11:47:00 MSK" name="on10_ReturnSqrt" finished-at="2020-10-07T11:47:00 MSK" duration-ms="2" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[10 sqrt test expected [3.1622776601683795] but found [3.162277660168379]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 10 sqrt test expected [3.1622776601683795] but found [3.162277660168379]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEquals(Assert.java:701)
at AdvSqrtTest.on10_ReturnSqrt(AdvSqrtTest.java:22)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:110)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- on10_ReturnSqrt -->
        <test-method signature="on3_ReturnSqrt()[pri:0, instance:AdvSqrtTest@564fabc8]" started-at="2020-10-07T11:47:00 MSK" name="on3_ReturnSqrt" finished-at="2020-10-07T11:47:00 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- on3_ReturnSqrt -->
        <test-method signature="on1_Return1()[pri:0, instance:AdvSqrtTest@564fabc8]" started-at="2020-10-07T11:47:00 MSK" name="on1_Return1" finished-at="2020-10-07T11:47:00 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- on1_Return1 -->
        <test-method signature="onNegative0_ReturnNegative0()[pri:0, instance:AdvSqrtTest@564fabc8]" started-at="2020-10-07T11:47:00 MSK" name="onNegative0_ReturnNegative0" finished-at="2020-10-07T11:47:00 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- onNegative0_ReturnNegative0 -->
        <test-method signature="onNegativeNumber_ReturnNan()[pri:0, instance:AdvSqrtTest@564fabc8]" started-at="2020-10-07T11:47:00 MSK" name="onNegativeNumber_ReturnNan" finished-at="2020-10-07T11:47:00 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- onNegativeNumber_ReturnNan -->
        <test-method signature="onNan_ReturnNan()[pri:0, instance:AdvSqrtTest@564fabc8]" started-at="2020-10-07T11:47:00 MSK" name="onNan_ReturnNan" finished-at="2020-10-07T11:47:00 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- onNan_ReturnNan -->
        <test-method signature="onPositiveInfinity_ReturnPositiveInfinity()[pri:0, instance:AdvSqrtTest@564fabc8]" started-at="2020-10-07T11:47:00 MSK" name="onPositiveInfinity_ReturnPositiveInfinity" finished-at="2020-10-07T11:47:00 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- onPositiveInfinity_ReturnPositiveInfinity -->
      </class> <!-- AdvSqrtTest -->
    </test> <!-- Command line test -->
  </suite> <!-- AdvSqrtTest -->
</testng-results>
